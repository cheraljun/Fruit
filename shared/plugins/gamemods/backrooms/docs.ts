/**
 * Backrooms游戏模组 - 文档内容
 */

import type { GameModDocs } from '../types.js';
import { BACKROOMS_VARIABLE_COUNT } from './variables.js';

export function getBackroomsDocs(): GameModDocs {
  return {
    name: '后室',
    description: `基于Backrooms Wiki的完整生存游戏系统（${BACKROOMS_VARIABLE_COUNT}个变量）`,
    variables: [
      {
        name: 'sanity',
        description: '理智值（0-100），核心生存属性，低于30出现幻觉，归零时精神崩溃导致游戏结束',
        example: '{{sanity < 30 ? "(你开始听到墙壁中的低语...)" : ""}}'
      },
      {
        name: 'health',
        description: '生命值（0-100）。受到攻击会降低，归零时死亡',
        example: '你感觉{{health < 30 ? "虚弱" : health < 70 ? "疲惫" : "还好"}}'
      },
      {
        name: 'stamina',
        description: '体力值（0-100）。影响逃跑成功率',
        example: '体力: {{stamina}}% {{stamina < 30 ? "(精疲力尽)" : ""}}'
      },
      {
        name: 'almond_water',
        description: '杏仁水瓶数。后室最重要的资源，恢复理智+20、生命+5',
        example: '杏仁水: {{almond_water}}瓶'
      },
      {
        name: 'supplies',
        description: '通用物资包数量。恢复生命+15、体力+25',
        example: '物资: {{supplies}}份'
      },
      {
        name: 'flashlight_battery',
        description: '手电筒电量（0-100）。在黑暗Level中必需',
        example: '手电筒: {{flashlight_battery}}%'
      },
      {
        name: 'rope',
        description: '绳索数量。用于逃离Drop Maze',
        example: '绳索: {{rope}}根'
      },
      {
        name: 'meat',
        description: '肉类数量。用于喂食或引开实体',
        example: '肉类: {{meat}}块'
      },
      {
        name: 'current_level',
        description: '当前所在Level的ID',
        example: '当前位置: {{current_level}}'
      },
      {
        name: 'levels_visited',
        description: '访问过的Level数量',
        example: '你已访问 {{levels_visited}} 个Level'
      },
      {
        name: 'entities_encountered',
        description: '遭遇实体的总次数',
        example: '遭遇过 {{entities_encountered}} 次危险实体'
      },
      {
        name: 'days_survived',
        description: '存活天数（基于TimeSystem）',
        example: '你已在后室中徘徊了 {{days_survived}} 天'
      },
      {
        name: 'shadow_intact',
        description: '影子是否完整（布尔值）。被Yellow Hounds攻击后变为false',
        example: '{{shadow_intact ? "" : "你失去了影子，伤口无法愈合"}}'
      },
      {
        name: 'noclip_sense',
        description: 'Noclip敏感度（0-10）。每次穿墙+1',
        example: '{{noclip_sense >= 5 ? "你感觉墙壁后有什么..." : ""}}'
      },
      {
        name: 'jerry_follower',
        description: '是否成为Jerry的信徒（布尔值）',
        example: '{{jerry_follower ? "Jerry在你心中低语..." : ""}}'
      },
      {
        name: 'partygoer_infected',
        description: '是否被Partygoer感染（布尔值）',
        example: '{{partygoer_infected ? "=)" : ""}}'
      }
    ],
    functions: [
      {
        name: 'useAlmondWater',
        params: '无',
        returns: 'string - 使用结果文本',
        description: '使用一瓶杏仁水，恢复理智+20、生命+5',
        example: 'fns.useAlmondWater();'
      },
      {
        name: 'useSupplies',
        params: '无',
        returns: 'string - 使用结果文本',
        description: '使用一份物资，恢复生命+15、体力+25',
        example: 'fns.useSupplies();'
      },
      {
        name: 'rollEncounter',
        params: 'levelId: string',
        returns: 'boolean - 是否遭遇实体',
        description: '基于当前Level检定是否遭遇实体',
        example: 'if (fns.rollEncounter("level_0")) { /* 遭遇 */ }'
      },
      {
        name: 'encounterEntity',
        params: 'entityId: string',
        returns: 'object - 实体数据',
        description: '触发特定实体遭遇，返回实体信息',
        example: 'const entity = fns.encounterEntity("smiler_lesser");'
      },
      {
        name: 'enterLevel',
        params: 'levelId: string',
        returns: 'void',
        description: '进入指定Level，触发理智衰减和计数',
        example: 'fns.enterLevel("level_5");'
      },
      {
        name: 'drainSanity',
        params: 'amount: number',
        returns: 'void',
        description: '降低理智值',
        example: 'fns.drainSanity(10);'
      },
      {
        name: 'tryEscape',
        params: '无',
        returns: 'boolean - 是否逃脱成功',
        description: '基于体力值尝试逃脱，成功率=体力值%',
        example: 'if (fns.tryEscape()) { /* 逃脱成功 */ }'
      },
      {
        name: 'takeDamage',
        params: 'healthDamage: number, sanityDamage: number',
        returns: 'void',
        description: '受到伤害（生命和/或理智）',
        example: 'fns.takeDamage(30, 20);'
      },
      {
        name: 'checkStatus',
        params: '无',
        returns: 'string - 状态摘要',
        description: '返回当前生命、理智、体力的文本摘要',
        example: 'const status = fns.checkStatus();'
      },
      {
        name: 'searchArea',
        params: '无',
        returns: 'string - 搜索结果',
        description: '搜索当前区域，30%概率找到物资',
        example: 'const result = fns.searchArea();'
      }
    ],
    usage: {
      setup: [
        '一、核心生存状态变量（8个）',
        '',
        'sanity 理智值',
        'number 0-100 初始100',
        '精神健康值，影响角色精神状态',
        '文本: {{sanity}}/100',
        '条件: {{sanity < 30 ? "你开始听到低语..." : ""}}',
        'Blockly读取: vars[\'sanity\']',
        'Blockly修改: vars[\'sanity\'] -= 5',
        '用途: 遭遇实体、黑暗环境、长时间探索会降低，杏仁水可恢复',
        '',
        'health 生命值',
        'number 0-100 初始100',
        '角色生命值，受到物理伤害会降低',
        '文本: 生命{{health}}',
        '条件: {{health < 30 ? "重伤" : "正常"}}',
        'Blockly读取: vars[\'health\']',
        'Blockly修改: vars[\'health\'] += 15',
        '用途: 实体攻击、环境伤害会降低，物资包、杏仁水可恢复',
        '',
        'stamina 体力值',
        'number 0-100 初始100',
        '角色体力值，影响行动能力',
        '文本: 体力{{stamina}}%',
        '条件: {{stamina < 30 ? "精疲力尽" : ""}}',
        'Blockly读取: vars[\'stamina\']',
        'Blockly修改: vars[\'stamina\'] -= 20',
        '用途: 奔跑、战斗、逃跑会消耗，休息、食物可恢复',
        '',
        'hunger 饥饿度',
        'number 0-100 初始0',
        '饥饿程度，数值越高越饿',
        '文本: {{hunger > 70 ? "非常饥饿" : ""}}',
        '条件: {{hunger < 50 ? "还好" : "很饿"}}',
        'Blockly读取: vars[\'hunger\']',
        'Blockly修改: vars[\'hunger\'] += 5',
        '用途: 时间流逝会增加，食物可降低',
        '',
        'thirst 口渴度',
        'number 0-100 初始0',
        '口渴程度，数值越高越渴',
        '文本: {{thirst > 70 ? "严重脱水" : ""}}',
        '条件: {{thirst < 50 ? "还好" : "口渴"}}',
        'Blockly读取: vars[\'thirst\']',
        'Blockly修改: vars[\'thirst\'] -= 30',
        '用途: 时间流逝会增加，水、杏仁水可降低',
        '',
        'temperature 体温',
        'number -10到50 初始37',
        '角色体温，摄氏度',
        '文本: 体温{{temperature}}°C',
        '条件: {{temperature < 35 ? "失温" : temperature > 39 ? "发热" : "正常"}}',
        'Blockly读取: vars[\'temperature\']',
        'Blockly修改: vars[\'temperature\'] = 35',
        '用途: 环境温度会影响，失温或过热会降低生命',
        '',
        'radiation 辐射值',
        'number 0-100 初始0',
        '累积辐射剂量',
        '文本: {{radiation > 50 ? "⚠ 辐射警告" : ""}}',
        '条件: {{radiation > 80 ? "致命辐射" : ""}}',
        'Blockly读取: vars[\'radiation\']',
        'Blockly修改: vars[\'radiation\'] += 10',
        '用途: 特定Level会增加，过高会持续掉血',
        '',
        'infection 感染程度',
        'number 0-100 初始0',
        '疾病或寄生感染程度',
        '文本: {{infection > 0 ? "感染进度" + infection + "%" : ""}}',
        '条件: {{infection > 50 ? "重度感染" : ""}}',
        'Blockly读取: vars[\'infection\']',
        'Blockly修改: vars[\'infection\'] += 5',
        '用途: Disease实体、污染环境会增加，药品可降低',
        '',
        '',
        '二、物资消耗品变量（10个）',
        '',
        'almond_water 杏仁水',
        'number 0-99 初始3',
        '后室最重要的消耗品资源',
        '文本: 杏仁水{{almond_water}}瓶',
        '条件: {{almond_water > 0 ? "还有杏仁水" : "已用尽"}}',
        'Blockly读取: vars[\'almond_water\']',
        'Blockly使用: if (vars[\'almond_water\'] > 0) { vars[\'almond_water\'] -= 1; vars[\'sanity\'] += 20; }',
        '用途: 恢复理智和生命，对抗Burster，喂食Jerry',
        '',
        'food 食物',
        'number 0-99 初始5',
        '食物数量',
        '文本: 食物{{food}}份',
        '条件: {{food < 3 ? "食物不足" : ""}}',
        'Blockly读取: vars[\'food\']',
        'Blockly使用: vars[\'food\'] -= 1; vars[\'hunger\'] -= 30;',
        '用途: 降低饥饿度，恢复体力',
        '',
        'water 水',
        'number 0-99 初始3',
        '饮用水数量',
        '文本: 水{{water}}瓶',
        '条件: {{water === 0 ? "没有水了" : ""}}',
        'Blockly读取: vars[\'water\']',
        'Blockly使用: vars[\'water\'] -= 1; vars[\'thirst\'] -= 40;',
        '用途: 降低口渴度',
        '',
        'supplies 物资包',
        'number 0-99 初始2',
        '通用物资包（绷带、工具等）',
        '文本: 物资{{supplies}}份',
        '条件: {{supplies >= 3 ? "充足" : "紧张"}}',
        'Blockly读取: vars[\'supplies\']',
        'Blockly使用: vars[\'supplies\'] -= 1; vars[\'health\'] += 15; vars[\'stamina\'] += 25;',
        '用途: 综合恢复生命和体力',
        '',
        'medicine 药品',
        'number 0-99 初始0',
        '医疗药品数量',
        '文本: 药品{{medicine}}份',
        '条件: {{medicine > 0 ? "可治疗" : ""}}',
        'Blockly读取: vars[\'medicine\']',
        'Blockly使用: vars[\'medicine\'] -= 1; vars[\'infection\'] -= 30;',
        '用途: 降低感染程度',
        '',
        'bandages 绷带',
        'number 0-99 初始3',
        '绷带数量',
        '文本: 绷带{{bandages}}个',
        '条件: {{bandages > 0 ? "可包扎" : ""}}',
        'Blockly读取: vars[\'bandages\']',
        'Blockly使用: vars[\'bandages\'] -= 1; vars[\'health\'] += 10;',
        '用途: 恢复生命值',
        '',
        'batteries 电池',
        'number 0-99 初始2',
        '备用电池数量',
        '文本: 电池{{batteries}}节',
        '条件: {{batteries === 0 ? "没有备用电池" : ""}}',
        'Blockly读取: vars[\'batteries\']',
        'Blockly使用: vars[\'batteries\'] -= 1; vars[\'flashlight_battery\'] += 50;',
        '用途: 充电手电筒',
        '',
        'fuel 燃料',
        'number 0-99 初始0',
        '燃料或能源',
        '文本: 燃料{{fuel}}单位',
        '条件: {{fuel > 0 ? "有燃料" : ""}}',
        'Blockly读取: vars[\'fuel\']',
        'Blockly使用: vars[\'fuel\'] -= 1;',
        '用途: 特定Level的机关或载具',
        '',
        'rope 绳索',
        'number 0-99 初始0',
        '绳索数量',
        '文本: 绳索{{rope}}根',
        '条件: {{rope > 0 ? "可使用绳索" : "没有绳索"}}',
        'Blockly读取: vars[\'rope\']',
        'Blockly使用: if (vars[\'rope\'] > 0) { vars[\'rope\'] -= 1; /* 逃离Drop Maze */ }',
        '用途: Drop Maze逃生',
        '',
        'meat 肉类',
        'number 0-99 初始0',
        '肉类食物',
        '文本: 肉类{{meat}}块',
        '条件: {{meat > 0 ? "可喂食实体" : ""}}',
        'Blockly读取: vars[\'meat\']',
        'Blockly使用: vars[\'meat\'] -= 1; /* 引开Hound */',
        '用途: 喂食或引开Hound等实体',
        '',
        '',
        '三、装备道具变量（8个）',
        '',
        'flashlight_battery 手电筒电量',
        'number 0-100 初始100',
        '手电筒剩余电量',
        '文本: 手电筒{{flashlight_battery}}%',
        '条件: {{flashlight_battery < 20 ? "⚠ 电量不足" : ""}}',
        'Blockly读取: vars[\'flashlight_battery\']',
        'Blockly使用: if (vars[\'flashlight_on\']) { vars[\'flashlight_battery\'] -= 2; }',
        '用途: 黑暗Level必需，开启状态会持续消耗',
        '',
        'flashlight_on 手电筒开启',
        'boolean 初始false',
        '手电筒是否开启',
        '文本: {{flashlight_on ? "手电筒开启中" : ""}}',
        '条件: {{flashlight_on && light_level < 20 ? "照亮周围" : ""}}',
        'Blockly读取: vars[\'flashlight_on\']',
        'Blockly使用: vars[\'flashlight_on\'] = !vars[\'flashlight_on\'];',
        '用途: 控制手电筒状态，影响视野和电量消耗',
        '',
        'weapon_durability 武器耐久',
        'number 0-100 初始0',
        '武器耐久度（0表示无武器）',
        '文本: {{weapon_durability > 0 ? "武器" + weapon_durability + "%" : ""}}',
        '条件: {{weapon_durability === 0 ? "无武器" : ""}}',
        'Blockly读取: vars[\'weapon_durability\']',
        'Blockly使用: vars[\'weapon_durability\'] -= 10;',
        '用途: 战斗时使用会降低',
        '',
        'armor_durability 护甲耐久',
        'number 0-100 初始0',
        '护甲耐久度（0表示无护甲）',
        '文本: {{armor_durability > 0 ? "护甲" + armor_durability + "%" : ""}}',
        '条件: {{armor_durability > 0 ? "受到保护" : ""}}',
        'Blockly读取: vars[\'armor_durability\']',
        'Blockly使用: vars[\'armor_durability\'] -= 5;',
        '用途: 受到攻击时降低伤害并消耗耐久',
        '',
        'radio_signal 无线电信号',
        'number 0-100 初始0',
        '无线电信号强度',
        '文本: {{radio_signal > 0 ? "信号" + radio_signal + "%" : "无信号"}}',
        '条件: {{radio_signal > 50 ? "可联系其他幸存者" : ""}}',
        'Blockly读取: vars[\'radio_signal\']',
        'Blockly使用: vars[\'radio_signal\'] = fns.random(0, 100);',
        '用途: 特定Level可以呼救或获取情报',
        '',
        'has_map 持有地图',
        'boolean 初始false',
        '是否持有地图',
        '文本: {{has_map ? "你有地图" : ""}}',
        '条件: {{has_map ? "可查看Level布局" : ""}}',
        'Blockly读取: vars[\'has_map\']',
        'Blockly使用: vars[\'has_map\'] = true;',
        '用途: 辅助导航，减少迷路',
        '',
        'has_compass 持有指南针',
        'boolean 初始false',
        '是否持有指南针',
        '文本: {{has_compass ? "你有指南针" : ""}}',
        '条件: {{has_compass ? "可辨别方向" : ""}}',
        'Blockly读取: vars[\'has_compass\']',
        'Blockly使用: vars[\'has_compass\'] = true;',
        '用途: 辅助导航',
        '',
        'has_gas_mask 持有防毒面具',
        'boolean 初始false',
        '是否持有防毒面具',
        '文本: {{has_gas_mask ? "你有防毒面具" : ""}}',
        '条件: {{has_gas_mask ? "可抵御毒气" : ""}}',
        'Blockly读取: vars[\'has_gas_mask\']',
        'Blockly使用: if (vars[\'has_gas_mask\']) { /* 免疫毒气伤害 */ }',
        '用途: 特定Level防护',
        '',
        '',
        '四、进度追踪变量（8个）',
        '',
        'current_level 当前Level',
        'string 初始"level_0"',
        '当前所在Level的ID',
        '文本: 位置{{current_level}}',
        '条件: {{current_level === "level_0" ? "起始区域" : ""}}',
        'Blockly读取: vars[\'current_level\']',
        'Blockly使用: vars[\'current_level\'] = "level_5";',
        '用途: 记录位置，用于判断环境效果',
        '',
        'previous_level 上个Level',
        'string 初始""',
        '上一个访问的Level',
        '文本: 来自{{previous_level}}',
        '条件: {{previous_level ? "可返回" : ""}}',
        'Blockly读取: vars[\'previous_level\']',
        'Blockly使用: vars[\'previous_level\'] = vars[\'current_level\'];',
        '用途: 记录路径，某些Level需要特定来源才能进入',
        '',
        'levels_visited 访问Level数',
        'number 初始1',
        '访问过的不同Level总数',
        '文本: 探索了{{levels_visited}}个Level',
        '条件: {{levels_visited >= 10 ? "成就" : ""}}',
        'Blockly读取: vars[\'levels_visited\']',
        'Blockly使用: vars[\'levels_visited\'] += 1;',
        '用途: 统计进度',
        '',
        'entities_encountered 遭遇实体次数',
        'number 初始0',
        '遭遇实体总次数',
        '文本: 遭遇{{entities_encountered}}次',
        '条件: {{entities_encountered > 5 ? "经验丰富" : ""}}',
        'Blockly读取: vars[\'entities_encountered\']',
        'Blockly使用: vars[\'entities_encountered\'] += 1;',
        '用途: 统计数据',
        '',
        'noclips_used Noclip次数',
        'number 初始0',
        '使用Noclip穿墙次数',
        '文本: {{noclips_used}}次穿墙',
        '条件: {{noclips_used > 10 ? "高敏感度" : ""}}',
        'Blockly读取: vars[\'noclips_used\']',
        'Blockly使用: vars[\'noclips_used\'] += 1; vars[\'noclip_sense\'] += 1;',
        '用途: 影响noclip敏感度',
        '',
        'deaths 死亡次数',
        'number 初始0',
        '死亡次数（如果有重生机制）',
        '文本: 死亡{{deaths}}次',
        '条件: {{deaths > 0 ? "重生者" : ""}}',
        'Blockly读取: vars[\'deaths\']',
        'Blockly使用: vars[\'deaths\'] += 1;',
        '用途: 统计数据或特殊结局',
        '',
        'items_found 找到物品数',
        'number 初始0',
        '找到物品总数',
        '文本: 找到{{items_found}}件物品',
        '条件: {{items_found >= 20 ? "收集家" : ""}}',
        'Blockly读取: vars[\'items_found\']',
        'Blockly使用: vars[\'items_found\'] += 1;',
        '用途: 统计数据',
        '',
        'distance_traveled 旅行距离',
        'number 初始0',
        '旅行距离（抽象单位）',
        '文本: 旅行{{distance_traveled}}单位',
        '条件: {{distance_traveled > 1000 ? "长途跋涉" : ""}}',
        'Blockly读取: vars[\'distance_traveled\']',
        'Blockly使用: vars[\'distance_traveled\'] += 100;',
        '用途: 统计数据或影响遭遇率',
        '',
        '',
        '五、特殊状态标记变量（12个）',
        '',
        'shadow_intact 影子完整',
        'boolean 初始true',
        '影子是否完整（Yellow Hounds会夺取）',
        '文本: {{shadow_intact ? "" : "你失去了影子"}}',
        '条件: {{!shadow_intact ? "无法治疗" : ""}}',
        'Blockly读取: vars[\'shadow_intact\']',
        'Blockly使用: vars[\'shadow_intact\'] = false;',
        '用途: 失去后无法恢复生命值',
        '',
        'noclip_sense Noclip敏感度',
        'number 0-10 初始0',
        'Noclip穿墙敏感度',
        '文本: 敏感度{{noclip_sense}}/10',
        '条件: {{noclip_sense >= 5 ? "可感知隐藏通道" : ""}}',
        'Blockly读取: vars[\'noclip_sense\']',
        'Blockly使用: vars[\'noclip_sense\'] += 1;',
        '用途: 达到特定值可解锁隐藏Level',
        '',
        'jerry_follower Jerry信徒',
        'boolean 初始false',
        '是否成为Jerry的信徒',
        '文本: {{jerry_follower ? "Jerry在你心中低语" : ""}}',
        '条件: {{jerry_follower ? "特殊剧情" : ""}}',
        'Blockly读取: vars[\'jerry_follower\']',
        'Blockly使用: vars[\'jerry_follower\'] = true;',
        '用途: 触摸Jerry后转化，影响结局',
        '',
        'partygoer_infected Partygoer感染',
        'boolean 初始false',
        '是否被Partygoer感染',
        '文本: {{partygoer_infected ? "=)" : ""}}',
        '条件: {{partygoer_infected ? "即将转化" : ""}}',
        'Blockly读取: vars[\'partygoer_infected\']',
        'Blockly使用: vars[\'partygoer_infected\'] = true;',
        '用途: Level Fun遭遇后感染，导致特殊结局',
        '',
        'disease_infected 疾病感染',
        'boolean 初始false',
        '是否感染The Disease',
        '文本: {{disease_infected ? "⚠ 已感染" : ""}}',
        '条件: {{disease_infected ? "持续掉血" : ""}}',
        'Blockly读取: vars[\'disease_infected\']',
        'Blockly使用: vars[\'disease_infected\'] = true;',
        '用途: 感染后持续损失生命和理智',
        '',
        'beast_aware Beast察觉',
        'boolean 初始false',
        'The Beast是否察觉到玩家',
        '文本: {{beast_aware ? "它知道你在这里..." : ""}}',
        '条件: {{beast_aware ? "被追踪" : ""}}',
        'Blockly读取: vars[\'beast_aware\']',
        'Blockly使用: if (vars[\'current_level\'] === "level_5") { vars[\'beast_aware\'] = true; }',
        '用途: Level 5触发，Beast开始追踪',
        '',
        'faceling_ally Faceling盟友',
        'boolean 初始false',
        '是否有Faceling盟友',
        '文本: {{faceling_ally ? "你的Faceling同伴跟随着你" : ""}}',
        '条件: {{faceling_ally ? "获得帮助" : ""}}',
        'Blockly读取: vars[\'faceling_ally\']',
        'Blockly使用: vars[\'faceling_ally\'] = true;',
        '用途: 特定剧情可获得Faceling帮助',
        '',
        'blub_cat_pet Blub Cat宠物',
        'boolean 初始false',
        '是否有Blub Cat宠物',
        '文本: {{blub_cat_pet ? "你的Blub Cat在身边" : ""}}',
        '条件: {{blub_cat_pet ? "降低理智损失" : ""}}',
        'Blockly读取: vars[\'blub_cat_pet\']',
        'Blockly使用: vars[\'blub_cat_pet\'] = true;',
        '用途: 陪伴效果，减少理智衰减',
        '',
        'marked_by_smiler 被Smiler标记',
        'boolean 初始false',
        '是否被Smiler标记',
        '文本: {{marked_by_smiler ? "你感到被注视着..." : ""}}',
        '条件: {{marked_by_smiler ? "遭遇率提升" : ""}}',
        'Blockly读取: vars[\'marked_by_smiler\']',
        'Blockly使用: vars[\'marked_by_smiler\'] = true;',
        '用途: 增加Smiler遭遇概率',
        '',
        'wretch_transformation Wretch转化',
        'number 0-100 初始0',
        'Wretch转化进度',
        '文本: {{wretch_transformation > 0 ? "转化" + wretch_transformation + "%" : ""}}',
        '条件: {{wretch_transformation >= 100 ? "完全转化" : ""}}',
        'Blockly读取: vars[\'wretch_transformation\']',
        'Blockly使用: vars[\'wretch_transformation\'] += 5;',
        '用途: The Disease感染会增加，100%转化为Wretch结局',
        '',
        'immunity_level 免疫等级',
        'number 0-5 初始0',
        '免疫力等级',
        '文本: 免疫{{immunity_level}}/5',
        '条件: {{immunity_level >= 3 ? "抗性提升" : ""}}',
        'Blockly读取: vars[\'immunity_level\']',
        'Blockly使用: vars[\'immunity_level\'] += 1;',
        '用途: 减少感染和疾病影响',
        '',
        'sanity_resistance 理智抗性',
        'number 0-5 初始0',
        '理智抗性等级',
        '文本: 抗性{{sanity_resistance}}/5',
        '条件: {{sanity_resistance >= 3 ? "精神坚韧" : ""}}',
        'Blockly读取: vars[\'sanity_resistance\']',
        'Blockly使用: vars[\'sanity_resistance\'] += 1;',
        '用途: 减少理智损失',
        '',
        '',
        '六、环境因素变量（6个）',
        '',
        'light_level 光照等级',
        'number 0-100 初始50',
        '当前区域光照强度',
        '文本: {{light_level < 20 ? "一片黑暗" : light_level < 50 ? "昏暗" : "明亮"}}',
        '条件: {{light_level < 10 ? "需要手电筒" : ""}}',
        'Blockly读取: vars[\'light_level\']',
        'Blockly使用: vars[\'light_level\'] = 10;',
        '用途: 影响视野和Smiler遭遇率',
        '',
        'noise_level 噪音等级',
        'number 0-100 初始30',
        '当前区域噪音强度',
        '文本: {{noise_level > 70 ? "嘈杂" : "安静"}}',
        '条件: {{noise_level > 80 ? "震耳欲聋" : ""}}',
        'Blockly读取: vars[\'noise_level\']',
        'Blockly使用: vars[\'noise_level\'] = 90;',
        '用途: 影响理智和实体注意',
        '',
        'temperature_ambient 环境温度',
        'number -50到150 初始20',
        '环境温度，摄氏度',
        '文本: 环境{{temperature_ambient}}°C',
        '条件: {{temperature_ambient < 0 ? "极寒" : temperature_ambient > 40 ? "酷热" : ""}}',
        'Blockly读取: vars[\'temperature_ambient\']',
        'Blockly使用: vars[\'temperature_ambient\'] = -10;',
        '用途: 影响角色体温',
        '',
        'humidity 湿度',
        'number 0-100 初始60',
        '环境湿度百分比',
        '文本: 湿度{{humidity}}%',
        '条件: {{humidity > 80 ? "潮湿" : humidity < 20 ? "干燥" : ""}}',
        'Blockly读取: vars[\'humidity\']',
        'Blockly使用: vars[\'humidity\'] = 95;',
        '用途: 影响舒适度和某些实体活跃度',
        '',
        'air_quality 空气质量',
        'number 0-100 初始100',
        '空气质量（100最好，0有毒）',
        '文本: {{air_quality < 50 ? "⚠ 空气有毒" : ""}}',
        '条件: {{air_quality < 30 && !has_gas_mask ? "持续损血" : ""}}',
        'Blockly读取: vars[\'air_quality\']',
        'Blockly使用: vars[\'air_quality\'] = 20;',
        '用途: 过低会持续损血，防毒面具可免疫',
        '',
        'danger_level 危险等级',
        'number 0-10 初始3',
        '当前区域危险等级',
        '文本: 危险{{danger_level}}/10',
        '条件: {{danger_level >= 8 ? "⚠ 极度危险" : ""}}',
        'Blockly读取: vars[\'danger_level\']',
        'Blockly使用: vars[\'danger_level\'] = 9;',
        '用途: 影响遭遇率和理智衰减',
        '',
        '',
        '七、变量通用使用方法',
        '',
        '文本嵌入:',
        '{{变量名}} 或 {{$vars.变量名}}',
        '示例: 理智{{sanity}}/100',
        '',
        '条件显示:',
        '{{条件 ? "是" : "否"}}',
        '示例: {{health < 30 ? "重伤" : "正常"}}',
        '',
        'Blockly读取:',
        'vars[\'变量名\']',
        '示例: let hp = vars[\'health\'];',
        '',
        'Blockly修改:',
        'vars[\'变量名\'] = 值',
        'vars[\'变量名\'] += 增量',
        'vars[\'变量名\'] -= 减量',
        '示例: vars[\'sanity\'] -= 10;',
        '',
        '提示:',
        `点击上方"注入变量（${BACKROOMS_VARIABLE_COUNT}个）"按钮可自动创建本模组所需的所有变量`,
        '变量ID、类型、默认值已预定义，点击注入即可使用',
        '变量具体用途和使用方法见上方说明',
        '游戏机制（恢复多少、消耗多少、判定逻辑等）由游戏作者在Blockly脚本中自由定义'
      ]
    }
  };
}

